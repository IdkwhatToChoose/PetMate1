@model PetMate.ViewModels.UserViewModel;
@inject PetMate.Helpers.IFileManager file;

@using PetMate.ViewModels;
@using PetMate.Helpers;

@{
    Layout = "_LoggedUserLayout";
    var user = Model;

    async Task<IFormFile> PetPhoto(PetMate.Model.Pet pet)
    {
        PetVM pet_vm = await PetMate.Helpers.PetMateModel.ToPetVM(pet.Id);
        return pet_vm.Image;
    }
    string StatusClass(string status)
    {
        switch (status)
        {
            case "Приета":
                status = "success";
                break;
            case "Отхвърлена":
                status = "close";
                break;
            case "в_очакване":
                status = "warning";
                break;
        }
        return status;
    }
}

<link rel="stylesheet" href="/assets/css/bootstrap.min.css" />
<link rel="stylesheet" href="/assets/css/lineicons.css" type="text/css" />
<link rel="stylesheet" href="/assets/css/materialdesignicons.min.css" type="text/css" />
<link rel="stylesheet" href="/assets/css/fullcalendar.css" />
<link rel="stylesheet" href="/assets/css/fullcalendar.css" />
<link rel="stylesheet" href="/assets/css/main.css" />
<link rel="stylesheet" href="/assets/css/dialogs.css" />

<style>

    .pm-findpetnow {
        display: flex;
        flex-wrap: wrap;
        gap: 1em;
        margin:auto;
        font-family: "Poppins", sans-serif;
    }

    .pm-item-container {
        display: flex;
        align-items: center;
        flex-direction: column-reverse;
        width: fit-content;
        padding: 10px;
    }

    .pm-container-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 14em;
        height: 15em;
        animation: none;
        border: 1.5px solid rgba(255, 255, 255, 0);
        background-color: rgba(124, 124, 124, 0.144);
        transition: border-color 0.3s ease-in-out;
    }

        .pm-container-item img {
            width: 100%;
            height: 60%;
            object-fit: cover;
        }

    .pm-item-content {
        text-align: center;
    }

        .pm-item-content p {
            color: #7AB730;
            margin-top: 1px;
        }

        .pm-item-content h2 {
            margin-top: 10px;
            margin-bottom: 5px;
            font-size: 1.7em;
        }

    .pm-profile {
        position: relative;
        background-color: #629226a6;
        padding: 10px 0;
        text-align: center;
        text-decoration: none;
        color: black;
        width: 100%;
        opacity: 0;
        cursor: pointer;
        top: 0;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .pm-item-container:hover .pm-profile {
        top: 43.5px;
        opacity: 1;
    }


    .req-action {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        transition: all ease-in-out 0.3s;
    }

    .action-ic {
        transition: background-color ease-in-out 0.3s
    }

    .req-action.accept:hover {
        background-color: forestgreen !important;
        .action-ic-accept

    {
        color: white !important;
    }

    }

    .req-action.reject:hover {
        background-color: red !important;
        .action-ic-reject

    {
        color: white !important;
    }

    }
    .tbl-requests{
        display:flex;
        margin:auto;
       background:white;
       padding:15px;
        box-shadow: 0 0 5px 10px #ededed;
    }

    .warning-btn{
        color:orangered !important;
    }
</style>


<div class="pm-findpetnow col-lg-10">
    @foreach (var pet in user.Pets)
    {
        <div class="pm-item-container">
            <div class="pm-container-item">
                <img src="data:image/jpeg;base64,@(await file.DisplayImage(pet.Image))" alt="Lights">
                <div class="pm-item-content">
                    <h2>@pet.Name</h2>
                    <p>На @pet.Age години</p>
                </div>
            </div>
            <a class="bi bi-eye pm-profile" href="@Url.Action("PetProfile","Pet",new{id=pet.Id.GetHashCode()})"></a>
        </div>

    }
</div>

<!-- Products End -->
<!-- Offer Start -->

<div class="col-lg-10 mx-auto mt-5">
    <div class="card-style mb-30">
        <div class="title d-flex flex-wrap align-items-center justify-content-between">
            <div class="left">
                <h6 class="text-medium mb-30">Заявки за осиновяване</h6>
            </div>

        </div>
        <!-- End Title -->
        <div class="table-responsive">

            <table class="table top-selling-table">
                <thead>
                    <tr>
                        <th>
                            <h6 class="text-sm text-medium">Към приют</h6>
                        </th>
                        <th class="min-width">
                            <h6 class="text-sm text-medium">
                                Към любимец
                            </h6>
                        </th>
                        <th class="min-width">
                            <h6 class="text-sm text-medium">
                                Статус
                            </h6>
                        </th>
                        <th>
                            <h6 class="text-sm text-medium">
                                Изпратена на
                            </h6>
                        </th>
                        <th>
                            <h6 class="text-sm text-medium text-end">
                                Действия
                            </h6>
                        </th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var request in user.Requests)
                    {

                        <tr>
                            <td>
                                <div class="product">
                                    <i class="bi bi-person text-secondary-emphasis mx-1"></i>
                                    <p class="text-sm">@request.Shelter.ShelterName</p>
                                </div>
                            </td>
                            <td>
                                <div class="product">
                                    <div class="image">
                                        <img src="data:image/jpeg;base64,@(await file.DisplayImage(await PetPhoto(request.Pet)))" alt="" />
                                    </div>
                                    <p class="text-sm">@request.Pet.Name</p>
                                </div>
                            </td>
                            <td>
                                <span class="status-btn @StatusClass(request.Status)-btn">@request.Status.Replace("_","  ")</span>
                            </td>
                            <td>
                                <span class="text-sm text-secondary-emphasis"><i class="bi bi-calendar mx-1"></i> @request.Datetime.ToShortDateString() <i class="bi bi-clock mx-1"></i>@request.Datetime.ToShortTimeString()</span>
                            </td>
                            <td>
                                <div class="action justify-content-end">
                                    <button class="edit bg-light req-action accept">
                                        <i class="lni lni-checkmark text-success-emphasis action-ic action-ic-accept "></i>
                                    </button>
                                    <button class="more-btn ml-10 dropdown-toggle rounded-circle bg-light req-action reject" id="moreAction1" data-bs-toggle="dropdown"
                                            aria-expanded="false">
                                        <i class="lni lni-close text-danger-emphasis action-ic action-ic-reject "></i>
                                    </button>

                                </div>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
            <!-- End Table -->
        </div>
    </div>
</div>
<div class="pm-requests-container">
   
</div>

<!-- Offer End -->



@*<script>
    const carouselInner = document.querySelector(".carousel-inner");
    const prevBtn = document.getElementById("prev");
    const nextBtn = document.getElementById("next");

    let index = 0;
    const itemsToShow = 4;
    const totalItems = document.querySelectorAll(".carousel-item").length;
    const itemWidth = document.querySelector(".carousel-item").offsetWidth + 20;

    function updateCarousel() {
        carouselInner.style.transform = `translateX(-${index * itemWidth}px)`;
    }

    nextBtn.addEventListener("click", () => {
        if (index < totalItems - itemsToShow) {
            index++;
        } else {
            index = 0;
        }
        updateCarousel();
    });

    prevBtn.addEventListener("click", () => {
        if (index > 0) {
            index--;
        } else {
            index = totalItems - itemsToShow;
        }
        updateCarousel();
    });
</script>*@