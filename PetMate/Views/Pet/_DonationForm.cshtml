@model PetMate.Model.Donation;
@inject IConfiguration config;


<form asp-action="Donate" method="post" id="donation-form" enctype="multipart/form-data">

    <input type="hidden" id="token" asp-for="StripeToken"/>
    <input type="number" hidden asp-for="PetId"/>
    @Html.AntiForgeryToken()

    <div class="mb-3 w-100">
        <label for="Amount" class="form-label">Donation Amount ($)</label>
        <input asp-for="Amount" type="number" class="form-control" min="5" step="5" value="50" required />
        <span asp-validation-for="Amount" class="text-danger"></span>
    </div>

    <div class="d-flex flex-wrap w-100 gap-2 mb-3">
        <button type="button" class="amount-option btn flex-grow-1" data-amount="25">$25</button>
        <button type="button" class="amount-option btn flex-grow-1" data-amount="50">$50</button>
        <button type="button" class="amount-option btn flex-grow-1 active" data-amount="100">$100</button>
        <button type="button" class="amount-option btn flex-grow-1" data-amount="250">$250</button>
    </div>

    <div class="mb-3 w-100">
        <label for="Name" class="form-label">Full Name</label>
        <input asp-for="Username" type="text" class="form-control" required />
        <span asp-validation-for="Username" class="text-danger"></span>
    </div>

    <div class="mb-3 w-100">
        <label for="Email" class="form-label">Email</label>
        <input asp-for="UserEmail" type="email" class="form-control" required />
        <span asp-validation-for="UserEmail" class="text-danger"></span>
    </div>

    <div class="mb-3 form-check w-100">
        <input asp-for="SendUpdates" type="checkbox" class="form-check-input" />
        <label class="form-check-label" for="SubscribeToNewsletter">Send me updates about the dogs my donation helps</label>
    </div>

    <!-- Stripe Elements will be inserted here -->
    <div id="card-element" class="mb-3 w-100"></div>
    <div id="card-errors" role="alert" class="mb-3 w-100"></div>

    <button type="submit" class="btn btn-donate w-100" id="submit-button">
        <span class="button-text">Donate Now</span>
        <span class="button-loading spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display: none;"></span>
    </button>
</form>


<script src="https://js.stripe.com/v3/"></script>

<!-- Custom JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- jQuery Validation -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

<!-- Stripe JS -->
<script src="https://js.stripe.com/v3/"></script>

<!-- Custom JS -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Handle amount option clicks
        const amountOptions = document.querySelectorAll('.amount-option');
        const amountInput = document.getElementById('Amount');

        amountOptions.forEach(option => {
            option.addEventListener('click', function () {
                // Remove active class from all options
                amountOptions.forEach(opt => opt.classList.remove('active'));

                // Add active class to clicked option
                this.classList.add('active');

                // Update amount input
                amountInput.value = this.dataset.amount;
            });
        });

        // Initialize Stripe
        const stripe = Stripe('@config["StripePublishableKey"]');
        const elements = stripe.elements();
        const card = elements.create('card', {
            style: {
                base: {
                    color: '#32325d',
                    fontFamily: '"Segoe UI", Arial, sans-serif',
                    fontSmoothing: 'antialiased',
                    fontSize: '16px',
                    '::placeholder': {
                        color: '#aab7c4'
                    }
                },
                invalid: {
                    color: '#dc3545',
                    iconColor: '#dc3545'
                }
            }
        });
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element
        card.addEventListener('change', function (event) {
            const displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
                displayError.style.display = 'block';
            } else {
                displayError.textContent = '';
                displayError.style.display = 'none';
            }
        });

        // Handle form submission
        const form = document.getElementById('donation-form');
        form.addEventListener('submit', async function (event) {
            event.preventDefault();

            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    var form = document.getElementById('donation-form');
                    var hiddenInput = document.getElementById("token");
                    hiddenInput.value = result.token.id;

                    form.submit();
                }
            });
        });

        // Set default amount option to active
        document.querySelector('.amount-option[data-amount="100"]').click();
    });
</script>